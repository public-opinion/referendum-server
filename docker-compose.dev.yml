
# https://docs.microsoft.com/en-us/dotnet/architecture/microservices/multi-container-microservice-net-applications/multi-container-applications-docker-compose

version: "3.8"

services:
  mysql:
    image: mysql:latest
    ports:
      - 13306:3306
    volumes:
      - referendum-mysql-data:/var/lib/mysql
    environment:
      # MYSQL_DATABASE: referendum
      # MYSQL_ROOT_PASSWORD: secret
      - MYSQL_USER=root
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    entrypoint: sh -c "
        echo 'CREATE DATABASE IF NOT EXISTS referendum;
            CREATE DATABASE IF NOT EXISTS logindb;' > \
            /docker-entrypoint-initdb.d/init.sql;
        /usr/local/bin/docker-entrypoint.sh \
            --character-set-server=utf8mb4 \
            --collation-server=utf8mb4_unicode_ci"
  
  oauth:
    image: node:latest
    command: sh -c "yarn install && yarn run oauth_dev"
    working_dir: /app
    ports:
      - 3002:3000
    volumes:
      - ./:/app
      - server-node_modules:/app/node_modules
  
  api-server:
    image: node:latest
    command: sh -c "yarn install && yarn run dev"
    working_dir: /app
    ports:
      - 3001:3000
    volumes:
      - ./:/app
      - server-node_modules:/app/node_modules
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: secret
      MYSQL_DB: referendum
    depends_on:
      - mysql

  react-client:
    image: node:latest
    command: sh -c "yarn install && yarn run start"
    working_dir: /app
    ports:
      - 3000:3000
    volumes:
      - ../referendum-client:/app
      - /app/node_modules
      # - /app/yarn.lock
    
  
  server:
    image: nginx:latest
    volumes:
      - ./nginx/api_conf.d:/etc/nginx/api_conf.d
      - ./nginx/fragments:/etc/nginx/fragments
      - ./nginx/api_gateway.conf:/etc/nginx/api_gateway.conf
      - ./nginx/api_backends.conf:/etc/nginx/api_backends.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./.secret/api_key.crt:/etc/ssl/certs/api_key.crt
      - ./.secret/api_key.key:/etc/ssl/private/api_key.key
    tmpfs:
      - /tmp
    ports:
      - 8000:80
      - 8080:8001
    depends_on:
      - api-server
      - react-client



volumes:
  referendum-mysql-data:
  server-node_modules:


  
# docker-compose up -d
# docker-compose logs -f
# docker-compose down

# docker-compose -f .\docker-compose.dev.yml up -d
# docker-compose -f .\docker-compose.dev.yml logs -f
# docker-compose -f .\docker-compose.dev.yml down


# docker exec -it referendum-server_server_1 nginx -s reload
# docker-compose -f .\docker-compose.dev.yml restart react-client