#user  nobody;

worker_processes  1;

events {
  worker_connections  1024;
}

http {
  include mime.types;

  upstream reactclient {
    # make sure both containers are in the same network
    # and the client dev container is named "react-client"
    server react-client:3000 fail_timeout=20s max_fails=10;
  }


  # include /etc/nginx/api_gateway.conf;
  upstream api_server {
    server api-server:3000;
  }


  server {
    listen 80;
    listen 8000;

    location / {
      add_header Access-Control-Allow-Origin *;
      proxy_pass http://reactclient;
    }

    # include /etc/nginx/api_conf.d/referendum.conf;
    location ~ /api/.* {
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;

      proxy_pass http://api_server;
      proxy_redirect off;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";  
    }

    location /sockjs-node {
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;

      proxy_pass http://reactclient;
      proxy_redirect off;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";  
    }
  }
}

