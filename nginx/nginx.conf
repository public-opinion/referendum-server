#user  nobody;

worker_processes  1;

events {
  worker_connections  1024;
}

http {
  include mime.types;

  log_format main '$remote_addr - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent ';

  upstream reactclient {
    # make sure both containers are in the same network
    # and the client dev container is named "react-client"
    server react-client:3000 fail_timeout=20s max_fails=10;
  }


  # include /etc/nginx/api_gateway.conf;
  upstream api_server {
    server api-server:3000;
  }

  upstream oauth_server {
    server oauth:3000;
  }

  server {
    listen 80;
    listen 8000;

    # access_log /tmp/access.log main;
    location ~ /oauth/.* {
      include /etc/nginx/fragments/reverse-proxy.conf;

      proxy_pass http://oauth_server;
    }
    # include /etc/nginx/api_conf.d/referendum.conf;
    location ~ /api/.* {
      include /etc/nginx/fragments/reverse-proxy.conf;

      proxy_pass http://api_server;
    }

    location /sockjs-node {
      include /etc/nginx/fragments/reverse-proxy.conf;

      proxy_pass http://reactclient;
    }

    

    location / {
      add_header Access-Control-Allow-Origin *;
      proxy_pass http://reactclient;
    }

  }
}

